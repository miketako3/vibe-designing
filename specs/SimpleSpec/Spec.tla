-------------------------- MODULE Spec --------------------------
EXTENDS Integers, TLC

(*--algorithm Spec
variables
  flag = [i \in {1, 2} |-> FALSE];  \* 各プロセスの状態フラグ
  
process Proc \in {1, 2}
variables trying = FALSE;
begin
  ncs:  \* 非クリティカルセクション
    while TRUE do
      trying := TRUE;
      
  enter:  \* クリティカルセクションに入ろうとする
    flag[self] := TRUE;
    
  wait:  \* 他のプロセスが終わるのを待つ
    await ~flag[3 - self] \/ ~trying;
    
  cs:  \* クリティカルセクション
    skip;  \* クリティカルセクションでの処理
    
  exit:  \* クリティカルセクションを出る
    flag[self] := FALSE;
    trying := FALSE;
    
    goto ncs;  \* 非クリティカルセクションに戻る
  end while;
end process;

end algorithm; *)
\* BEGIN TRANSLATION (this part is generated by the TLA+ translator)
VARIABLES flag, pc, trying

vars == << flag, pc, trying >>

ProcSet == ({1, 2})

Init == (* Global variables *)
        /\ flag = [i \in {1, 2} |-> FALSE]
        (* Process Proc *)
        /\ trying = [self \in {1, 2} |-> FALSE]
        /\ pc = [self \in ProcSet |-> "ncs"]

ncs(self) == /\ pc[self] = "ncs"
             /\ trying' = [trying EXCEPT ![self] = TRUE]
             /\ pc' = [pc EXCEPT ![self] = "enter"]
             /\ flag' = flag

enter(self) == /\ pc[self] = "enter"
               /\ flag' = [flag EXCEPT ![self] = TRUE]
               /\ pc' = [pc EXCEPT ![self] = "wait"]
               /\ UNCHANGED trying

wait(self) == /\ pc[self] = "wait"
              /\ ~flag[3 - self] \/ ~trying[self]
              /\ pc' = [pc EXCEPT ![self] = "cs"]
              /\ UNCHANGED << flag, trying >>

cs(self) == /\ pc[self] = "cs"
            /\ TRUE
            /\ pc' = [pc EXCEPT ![self] = "exit"]
            /\ UNCHANGED << flag, trying >>

exit(self) == /\ pc[self] = "exit"
              /\ flag' = [flag EXCEPT ![self] = FALSE]
              /\ trying' = [trying EXCEPT ![self] = FALSE]
              /\ pc' = [pc EXCEPT ![self] = "ncs"]

Proc(self) == ncs(self) \/ enter(self) \/ wait(self) \/ cs(self)
                 \/ exit(self)

Next == (\E self \in {1, 2}: Proc(self))

Spec == Init /\ [][Next]_vars

\* END TRANSLATION
\* 安全性プロパティ: 2つのプロセスが同時にクリティカルセクションに入らない
MutualExclusion == ~(\E i, j \in {1, 2}: i # j /\ pc[i] = "cs" /\ pc[j] = "cs")

\* 活性プロパティ: プロセスがクリティカルセクションに入りたいとき、いつかは入れる
Liveness == \A self \in {1, 2}: (pc[self] = "wait" ~> pc[self] = "cs")
=============================================================================
